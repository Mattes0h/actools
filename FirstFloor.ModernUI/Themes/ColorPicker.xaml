<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:FirstFloor.ModernUI.Windows.Controls" xmlns:e="clr-namespace:FirstFloor.ModernUI.Effects"
    xmlns:mui="clr-namespace:FirstFloor.ModernUI">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ComboBox.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBox.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBlock.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Slider.xaml" />
    <!--<ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernUI.Dark.xaml" />-->
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="ColorPickerToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="Width" Value="23" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Foreground" Value="{DynamicResource ModernButtonText}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <c:Cell Background="Transparent">
            <Rectangle Fill="{TemplateBinding Background}" Width="23" HorizontalAlignment="Right" />
            <Path x:Name="Arrow" Margin="8 1 8 0" Fill="{TemplateBinding Foreground}" Data="{DynamicResource DownArrowGeometry}"
                HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="False" />
            <Ellipse x:Name="PART_Circle" Width="16" Height="16" Margin="2" HorizontalAlignment="Right" VerticalAlignment="Center"
                Fill="{TemplateBinding Background}" Visibility="Collapsed" />
            <Path x:Name="PART_Icon" Width="12" Height="12" Fill="{TemplateBinding Background}" Stretch="Uniform" HorizontalAlignment="Right"
                VerticalAlignment="Center" Margin="4" Visibility="Collapsed"
                Data="F1 M 38,20L 53,38L 33,58L 15,41L 24,32C 24,32 42,38 44,34C 47,29 39,28 39,30C 41,31 42,33 42,33C 42,33 22,33 19,25C 17,19 36,22 36,22L 38,20 Z M 33,24C 33,24 23,24 23,25C 23,27 29,28 29,28L 33,24 Z M 53,36L 42,23C 42,23 51,29 53,30C 54,30 57,28 60,30C 63,31 60,35 60,33C 60,32 55,33 55,33C 63,34 64,38 63,39C 61,41 59,41 59,39C 59,38 53,36 53,36 Z" />
          </c:Cell>

          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsEnabled" Value="True" />
                <Condition Property="IsMouseOver" Value="False" />
                <Condition Property="IsChecked" Value="False" />
                <Condition Property="IsPressed" Value="False" />
              </MultiTrigger.Conditions>
              <!--<Setter TargetName="PART_Circle" Property="Fill" Value="Transparent" />-->
            </MultiTrigger>

            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextHover}" />
              <Setter TargetName="PART_Icon" Property="Fill" Value="{DynamicResource ModernButtonText}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="PART_Icon" Property="Fill" Value="{DynamicResource ModernButtonText}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="PART_Icon" Property="Fill" Value="{DynamicResource ModernButtonText}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextDisabled}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ColorPickerSliderThumb" TargetType="Thumb" BasedOn="{StaticResource VerticalSliderThumbStyle}">
    <Setter Property="Background" Value="White" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <c:Cell Background="Transparent">
            <Path Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" Stretch="Fill" Width="4" HorizontalAlignment="Left"
                Data="F1 M 30,22L 50,37L 50,38L 30,53L 30,22 Z" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
            <Path Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" Stretch="Fill" Width="4" HorizontalAlignment="Right"
                Data="F1 M 50,22L 30,37L 30,38L 50,53L 50,22 Z" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
          </c:Cell>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource SliderThumbBackgroundHover}" />
              <Setter Property="BorderBrush" Value="{DynamicResource SliderThumbBorderHover}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
              <Setter Property="Background" Value="{DynamicResource SliderThumbBackgroundDragging}" />
              <Setter Property="BorderBrush" Value="{DynamicResource SliderThumbBorderDragging}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Background" Value="{DynamicResource SliderThumbBackgroundDisabled}" />
              <Setter Property="BorderBrush" Value="{DynamicResource SliderThumbBorderDisabled}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ColorPickerSlider" TargetType="Slider">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Orientation" Value="Vertical" />
    <Setter Property="Width" Value="22" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <c:Cell Background="Transparent" SnapsToDevicePixels="True" MinWidth="{TemplateBinding Slider.MinWidth}">
            <Track x:Name="PART_Track">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}" />
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}" />
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb x:Name="Thumb" Style="{StaticResource ColorPickerSliderThumb}" />
              </Track.Thumb>
            </Track>
          </c:Cell>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ColorPickerPaletteThumb" TargetType="Thumb" BasedOn="{StaticResource VerticalSliderThumbStyle}">
    <Setter Property="Width" Value="20" />
    <Setter Property="Height" Value="20" />
    <Setter Property="Background" Value="White" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <c:Cell Background="Transparent">
            <Path Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" Stretch="Fill"
                Data="F1 M 22,39L 19,39L 19,36L 22,36C 22,28 28,22 36,22L 36,19L 39,19L 39,22C 47,22 53,28 53,36L 57,36L 57,39L 53,39C 53,47 47,53 39,53L 39,57L 36,57L 36,53C 28,53 22,47 22,39 Z M 25,36L 28,36L 28,39L 25,39C 26,45 30,49 36,50L 36,47L 39,47L 39,50C 45,49 49,45 50,39L 47,39L 47,36L 50,36C 49,30 45,26 39,25L 39,28L 36,28L 36,25C 30,26 26,30 25,36 Z" />
          </c:Cell>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="c:ColorPickerPanel">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />

    <Setter Property="Background" Value="{DynamicResource InputBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource InputText}" />
    <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />
    <Setter Property="BorderThickness" Value="0" />

    <Setter Property="Padding" Value="4" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="c:ColorPickerPanel">
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}"
              BorderBrush="{TemplateBinding BorderBrush}">
            <StackPanel Orientation="Horizontal" Height="256" Margin="10">
              <c:Cell Width="256" Height="256">
                <Rectangle x:Name="PART_Palette" Fill="Black">
                  <Rectangle.Effect>
                    <e:ColorPickerHuePaletteEffect Hue="{Binding Hue, RelativeSource={RelativeSource TemplatedParent}}" />
                  </Rectangle.Effect>
                </Rectangle>
                <Thumb x:Name="PART_Thumb" Style="{StaticResource ColorPickerPaletteThumb}" HorizontalAlignment="Left" VerticalAlignment="Top">
                  <Thumb.RenderTransform>
                    <TranslateTransform X="{Binding ThumbX, RelativeSource={RelativeSource TemplatedParent}}"
                        Y="{Binding ThumbY, RelativeSource={RelativeSource TemplatedParent}}" />
                  </Thumb.RenderTransform>
                </Thumb>
              </c:Cell>

              <c:Cell Margin="8 -5" Width="22">
                <Rectangle x:Name="PART_SliderBackground" Fill="Black" Margin="4 5">
                  <Rectangle.Effect>
                    <e:ColorPickerHueSliderEffect />
                  </Rectangle.Effect>
                </Rectangle>
                <Slider x:Name="PART_Slider" Style="{StaticResource ColorPickerSlider}" Minimum="0" Maximum="359"
                    Value="{Binding Hue, RelativeSource={RelativeSource TemplatedParent}}" IsMoveToPointEnabled="True" />
              </c:Cell>

              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="21" />
                  <ColumnDefinition Width="60" />
                  <ColumnDefinition Width="80" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>

                <c:ModernButton Grid.Row="0" Grid.ColumnSpan="3" HorizontalAlignment="Right" VerticalAlignment="Top"
                    ToolTip="{x:Static mui:UiStrings.PickColorFromScreen}" x:Name="PART_PickerButton"
                    IconData="F1 M 23,4L 26,7C 26,7 26,6 26,5C 26,2 28,-3e-006 31,-3e-006C 34,-3e-006 37,2 37,5C 37,8 34,11 31,11C 31,11 30,10 29,10L 32,13C 33,14 33,15 32,15L 32,16C 31,16 30,16 30,16L 21,7C 20,6 20,5 21,5L 21,4C 22,4 23,4 23,4 Z M 21,8L 28,16C 28,16 15,30 7,32C 5,34 3,36 1,37L 0,35C 1,34 2,31 4,30C 7,22 21,8 21,8 Z" />

                <StackPanel Margin="0 0 0 8" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Left" Width="80">
                  <Rectangle x:Name="PART_OriginalColor" Height="32" Margin="0 0 0 4"
                      Fill="{Binding OriginalColor, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:ColorPicker.ColorToBrushConverter}}" />
                  <Rectangle Height="32" Margin="0 0 0 8"
                      Fill="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:ColorPicker.ColorToBrushConverter}}" />
                </StackPanel>

                <RadioButton Grid.Column="0" Grid.Row="4" GroupName="Red"
                    IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static c:ColorPickingMode.Red}}" />
                <RadioButton Grid.Column="0" Grid.Row="5" GroupName="Green"
                    IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static c:ColorPickingMode.Green}}" />
                <RadioButton Grid.Column="0" Grid.Row="6" GroupName="Blue"
                    IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static c:ColorPickingMode.Blue}}" />

                <RadioButton Grid.Column="0" Grid.Row="1" GroupName="Hue"
                    IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static c:ColorPickingMode.Hue}}" />
                <RadioButton Grid.Column="0" Grid.Row="2" GroupName="Saturation"
                    IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static c:ColorPickingMode.Saturation}}" />
                <RadioButton Grid.Column="0" Grid.Row="3" GroupName="Brightness"
                    IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static c:ColorPickingMode.Brightness}}" />

                <c:ValueLabel Grid.Column="1" Grid.Row="4" Content="R" Value="{Binding Red, RelativeSource={RelativeSource TemplatedParent}}" />
                <c:ValueLabel Grid.Column="1" Grid.Row="5" Content="G" Value="{Binding Green, RelativeSource={RelativeSource TemplatedParent}}" />
                <c:ValueLabel Grid.Column="1" Grid.Row="6" Content="B" Value="{Binding Blue, RelativeSource={RelativeSource TemplatedParent}}" />

                <c:ValueLabel Grid.Column="1" Grid.Row="1" Content="H" Postfix="°" Value="{Binding Hue, RelativeSource={RelativeSource TemplatedParent}}" />
                <c:ValueLabel Grid.Column="1" Grid.Row="2" Content="S" Postfix="%"
                    Value="{Binding Saturation, RelativeSource={RelativeSource TemplatedParent}}" />
                <c:ValueLabel Grid.Column="1" Grid.Row="3" Content="B" Postfix="%"
                    Value="{Binding Brightness, RelativeSource={RelativeSource TemplatedParent}}" />

                <Slider Grid.Column="2" Grid.Row="4" Minimum="0" Maximum="255" Value="{Binding Red, RelativeSource={RelativeSource TemplatedParent}}"
                    IsMoveToPointEnabled="True" />
                <Slider Grid.Column="2" Grid.Row="5" Minimum="0" Maximum="255" Value="{Binding Green, RelativeSource={RelativeSource TemplatedParent}}"
                    IsMoveToPointEnabled="True" />
                <Slider Grid.Column="2" Grid.Row="6" Minimum="0" Maximum="255" Value="{Binding Blue, RelativeSource={RelativeSource TemplatedParent}}"
                    IsMoveToPointEnabled="True" />

                <Slider Grid.Column="2" Grid.Row="1" Minimum="0" Maximum="359" Value="{Binding Hue, RelativeSource={RelativeSource TemplatedParent}}"
                    IsMoveToPointEnabled="True" />
                <Slider Grid.Column="2" Grid.Row="2" Minimum="0" Maximum="100" Value="{Binding Saturation, RelativeSource={RelativeSource TemplatedParent}}"
                    IsMoveToPointEnabled="True" />
                <Slider Grid.Column="2" Grid.Row="3" Minimum="0" Maximum="100" Value="{Binding Brightness, RelativeSource={RelativeSource TemplatedParent}}"
                    IsMoveToPointEnabled="True" />
              </Grid>
            </StackPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsBright" Value="True">
              <Setter TargetName="PART_Thumb" Property="Background" Value="Black" />
            </Trigger>
            <Trigger Property="Mode" Value="{x:Static c:ColorPickingMode.Saturation}">
              <Setter TargetName="PART_Slider" Property="Maximum" Value="100" />
              <Setter TargetName="PART_Slider" Property="Value" Value="{Binding Saturation, RelativeSource={RelativeSource TemplatedParent}}" />
              <Setter TargetName="PART_Palette" Property="Effect">
                <Setter.Value>
                  <e:ColorPickerSaturationPaletteEffect Saturation="{Binding Saturation, RelativeSource={RelativeSource TemplatedParent}}" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_SliderBackground" Property="Effect">
                <Setter.Value>
                  <e:ColorPickerSaturationSliderEffect Hue="{Binding Hue, RelativeSource={RelativeSource TemplatedParent}}"
                      Brightness="{Binding Brightness, RelativeSource={RelativeSource TemplatedParent}}" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="Mode" Value="{x:Static c:ColorPickingMode.Brightness}">
              <Setter TargetName="PART_Slider" Property="Maximum" Value="100" />
              <Setter TargetName="PART_Slider" Property="Value" Value="{Binding Brightness, RelativeSource={RelativeSource TemplatedParent}}" />
              <Setter TargetName="PART_Palette" Property="Effect">
                <Setter.Value>
                  <e:ColorPickerBrightnessPaletteEffect Brightness="{Binding Brightness, RelativeSource={RelativeSource TemplatedParent}}" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_SliderBackground" Property="Effect">
                <Setter.Value>
                  <e:ColorPickerBrightnessSliderEffect Hue="{Binding Hue, RelativeSource={RelativeSource TemplatedParent}}"
                      Saturation="{Binding Saturation, RelativeSource={RelativeSource TemplatedParent}}" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="Mode" Value="{x:Static c:ColorPickingMode.Red}">
              <Setter TargetName="PART_Slider" Property="Maximum" Value="255" />
              <Setter TargetName="PART_Slider" Property="Value" Value="{Binding Red, RelativeSource={RelativeSource TemplatedParent}}" />
              <Setter TargetName="PART_Palette" Property="Effect">
                <Setter.Value>
                  <e:ColorPickerRedPaletteEffect Red="{Binding Red, RelativeSource={RelativeSource TemplatedParent}}" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_SliderBackground" Property="Effect">
                <Setter.Value>
                  <e:ColorPickerRedSliderEffect Green="{Binding Green, RelativeSource={RelativeSource TemplatedParent}}"
                      Blue="{Binding Blue, RelativeSource={RelativeSource TemplatedParent}}" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="Mode" Value="{x:Static c:ColorPickingMode.Green}">
              <Setter TargetName="PART_Slider" Property="Maximum" Value="255" />
              <Setter TargetName="PART_Slider" Property="Value" Value="{Binding Green, RelativeSource={RelativeSource TemplatedParent}}" />
              <Setter TargetName="PART_Palette" Property="Effect">
                <Setter.Value>
                  <e:ColorPickerGreenPaletteEffect Green="{Binding Green, RelativeSource={RelativeSource TemplatedParent}}" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_SliderBackground" Property="Effect">
                <Setter.Value>
                  <e:ColorPickerGreenSliderEffect Red="{Binding Red, RelativeSource={RelativeSource TemplatedParent}}"
                      Blue="{Binding Blue, RelativeSource={RelativeSource TemplatedParent}}" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="Mode" Value="{x:Static c:ColorPickingMode.Blue}">
              <Setter TargetName="PART_Slider" Property="Maximum" Value="255" />
              <Setter TargetName="PART_Slider" Property="Value" Value="{Binding Blue, RelativeSource={RelativeSource TemplatedParent}}" />
              <Setter TargetName="PART_Palette" Property="Effect">
                <Setter.Value>
                  <e:ColorPickerBluePaletteEffect Blue="{Binding Blue, RelativeSource={RelativeSource TemplatedParent}}" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_SliderBackground" Property="Effect">
                <Setter.Value>
                  <e:ColorPickerBlueSliderEffect Red="{Binding Red, RelativeSource={RelativeSource TemplatedParent}}"
                      Green="{Binding Green, RelativeSource={RelativeSource TemplatedParent}}" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="c:ColorPicker">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="2 1 21 1" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="c:ColorPicker">
          <c:Cell>
            <c:BetterTextBox x:Name="PART_TextBox"
                Text="{Binding DisplayColor, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                Padding="{TemplateBinding Padding}" Placeholder="{x:Static mui:UiStrings.SelectColor}" />
            <ToggleButton x:Name="PART_Button" HorizontalAlignment="Right" Margin="2 0 0 0"
                Foreground="{Binding OverlayColor, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:ColorPicker.ColorToBrushConverter}}"
                Background="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:ColorPicker.ColorToBrushConverter}}"
                Style="{StaticResource ColorPickerToggleButton}"
                IsHitTestVisible="{Binding ElementName=PART_Popup, Path=IsOpen, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}" />
            <Popup x:Name="PART_Popup" PlacementTarget="{Binding ElementName=PART_TextBox}" Placement="Bottom" HorizontalOffset="-4"
                IsOpen="{Binding IsChecked, ElementName=PART_Button, Mode=TwoWay}" VerticalOffset="-5" StaysOpen="False" AllowsTransparency="True"
                PopupAnimation="Slide">
              <c:Cell x:Name="PART_Root" Margin="0" HorizontalAlignment="Center">
                <c:ColorPickerPanel x:Name="PART_Panel" Background="{DynamicResource PopupBackground}" BorderThickness="0" Margin="1"
                    Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Border BorderBrush="{DynamicResource Accent}" BorderThickness="1" />
              </c:Cell>
            </Popup>
          </c:Cell>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsEnabled" Value="True" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_TextBox" Property="Background" Value="{DynamicResource InputBackgroundHover}" />
              <Setter TargetName="PART_TextBox" Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
              <Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource InputTextHover}" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter TargetName="PART_TextBox" Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="PART_TextBox" Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>