<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:FirstFloor.ModernUI.Windows.Controls">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="ContextMenu.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

  <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
    <!--<Setter Property="HorizontalContentAlignment"
        Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment"
        Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />-->
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="7 2 8 2" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Accent}" />
              <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />

    <Setter Property="CaretBrush" Value="{DynamicResource InputText}" />
    <Setter Property="SelectionBrush" Value="{DynamicResource Accent}" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden"
              VerticalScrollBarVisibility="Hidden" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
      </Grid.ColumnDefinitions>
      <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Placement="Bottom" Margin="1"
          IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
          PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
        <c:Cell Margin="0" MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">

          <Border x:Name="DropDownBorder" Background="{DynamicResource PopupBackground}" BorderBrush="{DynamicResource WindowBorderActive}" BorderThickness="1">
            <!-- popup border thickness not dependent on BorderThickness property-->
            <ScrollViewer x:Name="DropDownScrollViewer">
              <c:Cell RenderOptions.ClearTypeHint="Enabled">
                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                  <Rectangle x:Name="OpaqueRect" Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}"
                      Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}" Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </c:Cell>
            </ScrollViewer>
          </Border>
        </c:Cell>
      </Popup>
      <ToggleButton Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}" IsChecked="{Binding IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
          Padding="0 0 0 10" />

      <Path x:Name="Arrow" Grid.ColumnSpan="2" Margin="3 1 8 0" Fill="{TemplateBinding Foreground}" Data="{DynamicResource DownArrowGeometry}"
          HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="False" />
      <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
          IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Padding="2 0 0 1"
          Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="HasItems" Value="False">
        <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
      </Trigger>
      <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
      </Trigger>
      <Trigger Property="IsGrouping" Value="True">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </Trigger>
      <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
        <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
        <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="ComboBox.CommonBase" TargetType="{x:Type ComboBox}">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Padding" Value="7 3 18 3" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
  </Style>

  <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBox.CommonBase}">
    <Setter Property="Foreground" Value="{DynamicResource InputText}" />
    <Setter Property="Background" Value="{DynamicResource InputBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />
    <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
    <Setter Property="VirtualizingStackPanel.ScrollUnit" Value="Pixel" />
    <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Placement="Bottom" Margin="1"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
              <c:Cell Margin="0" MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                  TextBlock.Foreground="{DynamicResource WindowText}">
                <Border x:Name="DropDownBorder" Background="{DynamicResource PopupBackground}" BorderBrush="{DynamicResource WindowBorderActive}"
                    BorderThickness="1">
                  <!-- popup border thickness not dependent on BorderThickness property-->
                  <ScrollViewer x:Name="DropDownScrollViewer">
                    <c:Cell RenderOptions.ClearTypeHint="Enabled">
                      <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Rectangle x:Name="OpaqueRect" Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}"
                            Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}" Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                      </Canvas>
                      <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </c:Cell>
                  </ScrollViewer>
                </Border>
              </c:Cell>
            </Popup>
            <ToggleButton Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" Padding="0 0 0 10" />
            <Path x:Name="Arrow" Grid.ColumnSpan="2" Margin="3 1 8 0" Fill="{TemplateBinding Foreground}" Data="{DynamicResource DownArrowGeometry}"
                HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="False" />
            <ContentPresenter IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Content="{TemplateBinding SelectionBoxItem}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="False">
              <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource InputTextHover}" />
              <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
              <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
              <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
              <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsEditable" Value="True">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="DataGridEditingComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
    <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="1,1" />
  </Style>

  <Style x:Key="ComboBoxAsTextBlock" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Padding" Value="-1" />
    <Style.Triggers>
      <Trigger Property="IsEditable" Value="True">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="-3 -1 -3 -1" />
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>