<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ac="clr-namespace:AcManager.Controls" xmlns:mui="http://firstfloorsoftware.com/ModernUI" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:c="clr-namespace:AcManager.Controls.Helpers" mc:Ignorable="d">
  <ResourceDictionary.MergedDictionaries>
    <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
    <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Easing.xaml" />
    <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Layout.xaml" />
    <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ListBox.xaml" />
    <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TreeView.xaml" />
    <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/BetterTextBox.xaml" />
    <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Themes/ModernButton.xaml" />
    <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Themes/HierarchicalComboBox.xaml" />
    <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/IconData.xaml" />
    <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/AcItemWrapperSpecific.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="GroupBoxExpander" TargetType="Expander">
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource WindowText}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <StackPanel SnapsToDevicePixels="True">
            <DockPanel x:Name="PART_Header" Margin="8 0 8 4">
              <ToggleButton DockPanel.Dock="Left" VerticalAlignment="Center" Style="{StaticResource ExpandCollapseToggleStyle}"
                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
              <ContentPresenter ContentSource="Header" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
            <ContentPresenter x:Name="PART_ExpandSite" Visibility="Collapsed" Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter TargetName="PART_ExpandSite" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
              <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Name}" Value="(DependencyProperty.UnsetValue)">
              <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="ac:AcListPage">
    <Style.Resources>
      <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
          <mui:SharedResourceDictionary Source="AcListPage.CommonBatchActions.xaml" />
        </ResourceDictionary.MergedDictionaries>

        <ControlTemplate x:Key="AcListPageCheckBoxItemTemplate" TargetType="ListBoxItem">
          <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Padding="2">
            <DockPanel>
              <CheckBox x:Name="PART_CheckBox"
                  IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                  IsHitTestVisible="False" DockPanel.Dock="Left" Margin="10 0 -11 0" Width="0" />
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.Foreground="{TemplateBinding Foreground}" />
            </DockPanel>
          </Border>

          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(ac:AcListPage.ActiveBoolHolder).Value, ElementName=PART_CheckBox}" Value="True">
              <DataTrigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard FillBehavior="HoldEnd" TargetProperty="Width">
                    <DoubleAnimation To="22" Duration="0:0:0.2" EasingFunction="{StaticResource StandardEase}" Storyboard.TargetName="PART_CheckBox" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>
              <DataTrigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard FillBehavior="HoldEnd" TargetProperty="Width">
                    <DoubleAnimation To="0" Duration="0:0:0.2" EasingFunction="{StaticResource StandardEase}" Storyboard.TargetName="PART_CheckBox" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.ExitActions>
            </DataTrigger>

            <!--<DataTrigger Value="True">
            <DataTrigger.Binding>
              <MultiBinding Converter="{StaticResource EqualToBooleanConverter}">
                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ac:AcListPage}}" Path="SelectedWrapper" />
                <Binding />
              </MultiBinding>
            </DataTrigger.Binding>
            <Setter TargetName="PART_Bg" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
            <Setter TargetName="PART_ContentHighlight" Property="Clip" Value="{x:Null}" />
            <Setter TargetName="PART_Content" Property="Visibility" Value="Collapsed" />
          </DataTrigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="AcListPageCheckBoxItem" TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBase}">
          <Setter Property="TextBlock.Foreground" Value="{DynamicResource ItemText}" />
          <Setter Property="Template" Value="{StaticResource AcListPageCheckBoxItemTemplate}" />
          <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource ItemTextHover}" />
              <Setter Property="Background" Value="{DynamicResource ItemBackgroundHover}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
              <Setter Property="Background" Value="{DynamicResource ItemBackgroundSelected}" />
              <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </ResourceDictionary>
    </Style.Resources>

    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="mui:InputBindingBehavior.PropagateToWindow" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ac:AcListPage">
          <Grid ClipToBounds="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="50" MaxWidth="400" />
              <ColumnDefinition Width="9" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid ZIndex="10">
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="33" />
              </Grid.RowDefinitions>

              <Border HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="0"
                  mui:FancyHintsService.Hint="{Binding Id, Source={x:Static c:FancyHints.MultiSelectionMode}, Mode=OneTime}"
                  mui:FancyHintsService.OffsetY="180" mui:FancyHintsService.OffsetX="80" />
              <Border HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="0"
                  mui:FancyHintsService.Hint="{Binding Id, Source={x:Static c:FancyHints.DoubleClickToQuickDrive}, Mode=OneTime}"
                  mui:FancyHintsService.OffsetY="10" mui:FancyHintsService.OffsetX="80" />

              <ListBox Grid.Row="0" x:Name="ItemsList" IsSynchronizedWithCurrentItem="True" ItemsSource="{TemplateBinding ItemsSource}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.VirtualizationMode="Recycling" ScrollViewer.CanContentScroll="True" VirtualizingPanel.ScrollUnit="Pixel"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True" VirtualizingPanel.IsContainerVirtualizable="False"
                  ItemTemplate="{StaticResource AcItemWrapperSpecific.ListItemTemplate}" mui:SaveScroll.Key="{TemplateBinding SaveScrollKey}">
                <ListBox.GroupStyle>
                  <GroupStyle>
                    <GroupStyle.ContainerStyle>
                      <Style TargetType="GroupItem">
                        <Setter Property="Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="GroupItem">
                              <mui:RememberingExpander Key="{Binding Name, StringFormat='{}.content_category_{0}', Mode=OneTime}" Margin="0 0 0 20"
                                  Style="{StaticResource GroupBoxExpander}" DefaultValue="True">
                                <Expander.Header>
                                  <TextBlock Style="{StaticResource Label}">
                                    <Run Text="{Binding Name, Mode=OneWay}" />
                                    <Run Text="{Binding ItemCount, Mode=OneWay, StringFormat='{}({0})'}" />
                                  </TextBlock>
                                </Expander.Header>
                                <ItemsPresenter />
                              </mui:RememberingExpander>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding Name}" Value="">
                            <Setter Property="Template">
                              <Setter.Value>
                                <ControlTemplate TargetType="GroupItem">
                                  <ItemsPresenter />
                                </ControlTemplate>
                              </Setter.Value>
                            </Setter>
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </GroupStyle.ContainerStyle>
                  </GroupStyle>
                </ListBox.GroupStyle>
                <ListBox.Template>
                  <ControlTemplate TargetType="ListBox">
                    <ScrollViewer x:Name="PART_ScrollViewer" Padding="{TemplateBinding Padding}" Focusable="False" CanContentScroll="True"
                        HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                      <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                  </ControlTemplate>
                </ListBox.Template>
                <ListBox.ItemsPanel>
                  <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" CacheLength="1,1" CacheLengthUnit="Page" ScrollUnit="Pixel" VirtualizationMode="Recycling"
                        IsVirtualizing="True" IsVirtualizingWhenGrouping="True" IsContainerVirtualizable="False" />
                  </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
              </ListBox>

              <DockPanel Grid.Row="1" Background="Transparent">
                <DockPanel.ContextMenu>
                  <ContextMenu>
                    <MenuItem Header="Copy IDs" Command="{Binding CopyIdsCommand}" />
                  </ContextMenu>
                </DockPanel.ContextMenu>
                <mui:ModernButton x:Name="AddNewButton" DockPanel.Dock="Right" IconData="{StaticResource AddIconData}"
                    ToolTip="Create a new one (Ctrl+Shift+N)" Margin="4 0 0 0" Style="{StaticResource NonTransparent}"
                    Visibility="{Binding AddNewCommand.IsAbleToExecute, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue={x:Static Visibility.Collapsed}}" />
                <mui:ModernButton x:Name="SaveAllButton" DockPanel.Dock="Right" IconData="{StaticResource SaveIconData}" ToolTip="Save all (Ctrl+Shift+S)"
                    IconWidth="10" IconHeight="10" Margin="4 0 0 0" Style="{StaticResource NonTransparent}" />
                <mui:ModernButton x:Name="ScrollToSelectedButton" DockPanel.Dock="Right" IconData="{StaticResource CollapsedIconData}"
                    ToolTip="{x:Static ac:ControlsStrings.Common_ScrollToSelected}" Margin="4 0 0 0" Style="{StaticResource NonTransparent}" />
                <TextBlock Text="{Binding Status}" Margin="{StaticResource StatusMargin}" Foreground="{DynamicResource WindowTextReadOnly}" />
              </DockPanel>

              <mui:Cell x:Name="PART_BatchMenuTransform" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Bottom" Height="95.000"
                  Background="{DynamicResource Accent}" TextBlock.Foreground="White" Margin="0 0 -4 0">
                <FrameworkElement.RenderTransform>
                  <TranslateTransform Y="95.000" />
                </FrameworkElement.RenderTransform>

                <Border x:Name="PART_BatchBlock" Panel.ZIndex="2" Padding="8" Background="{DynamicResource Accent}">
                  <mui:SpacingStackPanel VerticalAlignment="Top" Spacing="8">
                    <FrameworkElement.Resources>
                      <mui:SharedResourceDictionary Source="AcListPage.BatchStyle.xaml" />
                    </FrameworkElement.Resources>

                    <mui:HierarchicalComboBox x:Name="PART_BatchActions">
                      <mui:HierarchicalComboBox.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource AccentOverlayColor}" Opacity="0.32" />
                      </mui:HierarchicalComboBox.BorderBrush>
                    </mui:HierarchicalComboBox>
                    <TextBlock DataContext="{Binding SelectedBatchAction.Description, RelativeSource={RelativeSource TemplatedParent}}" Text="{Binding}"
                        Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" Style="{StaticResource Small}"
                        TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource AccentOverlay}" />

                    <Grid x:Name="PART_BatchBlock_ButtonsGrid" Height="27">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="8" />
                        <ColumnDefinition Width="1*" />
                      </Grid.ColumnDefinitions>

                      <Button x:Name="PART_BatchBlock_RunButton" Padding="8 3 8 5" Height="27"
                          IsEnabled="{Binding SelectedAmount, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MoreConverter}}">
                        <DockPanel>
                          <Path Width="8" Height="8" ClipToBounds="True" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 2 0 0"
                              Stretch="Fill" Fill="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                              Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z" />
                          <TextBlock x:Name="PART_BatchBlock_RunButton_Text" VerticalAlignment="Center" Margin="4 0 0 0">
                            <TextBlock.Text>
                              <MultiBinding StringFormat="{x:Static mui:ColonConverter.FormatBoth}">
                                <Binding Path="SelectedBatchAction.DisplayApply" TargetNullValue="Run" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="SelectedAmount" RelativeSource="{RelativeSource TemplatedParent}" />
                              </MultiBinding>
                            </TextBlock.Text>
                          </TextBlock>
                        </DockPanel>
                      </Button>
                      <Button x:Name="PART_BatchBlock_CloseButton" Padding="8 3 8 5" Height="27" Grid.Column="2">
                        <DockPanel>
                          <mui:Cell Width="8" Height="8" ClipToBounds="True" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 2 0 0">
                            <Line X1="-5.01" X2="12.99" Y1="-5.01" Y2="12.99" StrokeThickness="1"
                                Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}" RenderOptions.EdgeMode="Unspecified" />
                            <Line X1="-5.01" X2="12.99" Y1="12.99" Y2="-5.01" StrokeThickness="1"
                                Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}" RenderOptions.EdgeMode="Unspecified" />
                          </mui:Cell>
                          <TextBlock x:Name="PART_BatchBlock_CloseButton_Text" Text="{x:Static mui:UiStrings.Close}" VerticalAlignment="Center"
                              Margin="4 0 0 0" />
                        </DockPanel>
                      </Button>
                    </Grid>
                  </mui:SpacingStackPanel>
                </Border>
              </mui:Cell>
            </Grid>

            <!-- Separator -->
            <mui:ModernTabSplitter Grid.Column="1" SaveKey="AcListPage" />
            <mui:ModernFrame x:Name="PART_Frame" Grid.Column="2" Source="{TemplateBinding SelectedSource}" Margin="16 0" TransitionName="Normal"
                TopSource="{x:Null}" />

            <!-- Batch params -->
            <Border Grid.Column="2" x:Name="PART_BatchActionParams_Wrapper" Panel.ZIndex="2" Margin="-9 0 0 0" VerticalAlignment="Bottom" Height="95.000">
              <FrameworkElement.RenderTransform>
                <TranslateTransform Y="95.000" />
              </FrameworkElement.RenderTransform>
              <Border x:Name="PART_BatchActionParams" Background="{DynamicResource Accent}" Padding="8">
                <FrameworkElement.RenderTransform>
                  <TranslateTransform X="0" />
                </FrameworkElement.RenderTransform>
                <FrameworkElement.Resources>
                  <mui:SharedResourceDictionary Source="AcListPage.BatchStyle.xaml" />
                </FrameworkElement.Resources>
                <DockPanel TextBlock.Foreground="{DynamicResource AccentOverlay}">
                  <ContentPresenter x:Name="PART_BatchAction" Margin="20 0" />
                </DockPanel>
              </Border>
            </Border>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsGroupingEnabled" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" TargetName="ItemsList" Value="False" />
              <Setter Property="ItemsPanel" TargetName="ItemsList">
                <Setter.Value>
                  <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True" />
                  </ItemsPanelTemplate>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="BatchMenuVisible" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard BeginTime="0:0:0.12">
                    <DoubleAnimation Duration="0:0:0.22" To="0" FillBehavior="HoldEnd" Storyboard.TargetName="PART_BatchMenuTransform"
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" EasingFunction="{StaticResource DecelerationEase}" />
                    <DoubleAnimation Duration="0:0:0.22" To="0" FillBehavior="HoldEnd" Storyboard.TargetName="PART_BatchActionParams_Wrapper"
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" EasingFunction="{StaticResource DecelerationEase}" />
                    <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.0" Storyboard.TargetName="ItemsList" Storyboard.TargetProperty="(ListBox.Padding)">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.22">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0 0 0 56</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.22" To="95.000" FillBehavior="Stop" Storyboard.TargetName="PART_BatchMenuTransform"
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" EasingFunction="{StaticResource AccelerationEase}" />
                    <DoubleAnimation Duration="0:0:0.22" To="95.000" FillBehavior="Stop" Storyboard.TargetName="PART_BatchActionParams_Wrapper"
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" EasingFunction="{StaticResource AccelerationEase}" />
                    <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.0" Storyboard.TargetName="ItemsList" Storyboard.TargetProperty="(ListBox.Padding)">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <!-- Empty version -->
    <Style.Triggers>
      <DataTrigger Binding="{Binding IsEmpty}" Value="True">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ac:AcListPage">
              <DockPanel Margin="0 0 0 100" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Button DockPanel.Dock="Bottom" x:Name="AddNewButton" Padding="8 3 8 5" ToolTip="Create a new one (Ctrl+Shift+N)" Margin="0 8 0 0"
                    Visibility="{TemplateBinding AddNewCommand, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                  <DockPanel>
                    <Path Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 2 0 0" Data="{StaticResource AddIconData}"
                        DockPanel.Dock="Left" Stretch="Uniform" Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource Self}}" />
                    <TextBlock Text="Create a new one" VerticalAlignment="Center" Margin="4 0 0 0" />
                  </DockPanel>
                </Button>
                <TextBlock Text="Nothing to display" Style="{StaticResource Heading1}" />
              </DockPanel>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>